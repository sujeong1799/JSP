package controller;

import java.io.BufferedReader;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import service.CommentService;
import service.CommentServiceImpl;


@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
	// 목적지 주소로 보내는 destPage는 쓰지않음.
	// 비동기 통신으로 요청이 온 곳으로 돌려보낸다.
	private int isOk;
	private CommentService csv;

    public CommentController() {
    	csv = new CommentServiceImpl();
    }
    
    protected void service(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 캐릭터 인코딩 설정, 컨텐츠 타입 설정
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		//contentType은 사용하지 않는다.
//		response.setContentType("text/html; charset=UTF-8");

		String uri = request.getRequestURI(); // 전체 요청경로
		log.info(">>> uri  " + uri);
		
		String pathUri = uri.substring("/cmt/".length());
		log.info(">>path: " + pathUri);
		// pathUri의 결과 modify/1, post
		
		String path = pathUri;
		
		//뒤에 있는 숫자
		String pathVar = "";
		
		if(pathUri.contains("/")) { // "/"이게 있다면
			// 추출을 할거여
			// pathUri의 결과 modify/1를 m부터 '/' 앞까지 추출한다. 결과 -> modify
			path = pathUri.substring(0, pathUri.lastIndexOf("/"));
			
			// modify/1 의 뒤에 숫자만 추출 
			pathVar = pathUri.substring(pathUri.lastIndexOf("/")+1);
		}
		
		log.info(path);
		log.info(pathVar);
		
		switch(path) {
		case "post":
			try {
			// js에서 보낸 데이터를 StringBuffer로 읽어들이는 작업
				StringBuffer sb = new StringBuffer(); // sb에다가 객체 담을거야
				String line = "";
				BufferedReader br = request.getReader(); // 댓글 객체를 들고와
				while((line = br.readLine()) != null) { // line에 값이 있다면 
					sb.append(line); // sb에 추가하고
				}
				
				log.info(">>> sb : "+ sb.toString()); // toString 찍어줄거야.
				
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		service(request, response);
	}

}
