package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.MemberVO;
import service.MemberService;
import service.MemberServiceImpl;

@WebServlet("/mem/*") // *로 하위경로 표시해준다.
public class MemberController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	// log설정 // 싱글톤방식 log는 각 클래스마다 있어야한다.
//	private static final Logger log = LoggerFactory.getLogger(클래스명)
	private static final Logger log = LoggerFactory.getLogger(MemberController.class);
	private RequestDispatcher rdp;
	private MemberService msv;
	private int isOk; // isOk 123안하려고 쓰는거임
	private String destPage; // 목적지 주소를 나타내준다.
	
	
	// 생성자
    public MemberController() {
    	msv = new MemberServiceImpl(); // 멤버서비스를 구현한 객체
    }

    
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//characterEncoding 설정 / contentType / uri
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		
		String uri = request.getRequestURI();
		log.info(">>> uri : " + uri);
		// >>> uri : /mem/join : 요청에 대한 path만 남기기
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path : "+path);
		
		switch(path) {
		case "join":
			destPage="/member/join.jsp";
			break;
			
		case "register":
			//jsp 에서 가져온 파라미터 저장
			String id = request.getParameter("id");
			String password = request.getParameter("password");
			String email = request.getParameter("email");
			int age = Integer.parseInt(request.getParameter("age"));
			
			// 파라미터로 mvo 객체 생성
			MemberVO mvo = new MemberVO(id, pw, email, age);
			
			isOk = msv.register(mvo);
			log.info(">>> JOIN > "+ (isOk > 0 ? "성공":"실패"));
			destPage="/"; // /만 찍어도 index 페이지로 넘어감
			break;
		}
		
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		service(request, response);
	}

}
