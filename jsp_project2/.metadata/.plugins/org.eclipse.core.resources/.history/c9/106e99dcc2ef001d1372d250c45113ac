package repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import domain.ProductVO;
import orm.DatabaseConnector;

public class ProductDAO implements DAO {
	// DAO는 DB랑 연결되는 connector가 있어야함 orm에 만들어주자
	// DB Connector
	private Connection conn; // DB 연결 정보
	private PreparedStatement pst; // DB 연결 후 sql 전송 객체 
	private String query = ""; // query문을 작성하기 위한 변수
	
	// 생성자
	public ProductDAO() {
		// 싱글톤 방식의 객체 생성방식
		DatabaseConnector dbc = DatabaseConnector.getInstance();
		// DB 연결정보
		conn = dbc.getConnection();
	}
	
	@Override
	public int insert(ProductVO pvo) {
		System.out.println("● DAO 접근완료 ●");
		// values는 아직 몰라 물음표 처리해서 매개변수로 ㅋ
		query = "insert into product(pname, price, madeby) values(?,?,?)";
		try {
			
			pst = conn.prepareStatement(query);
			pst.setString(1, pvo.getPname());
			pst.setInt(2, pvo.getPrice());
			pst.setString(3, pvo.getMadeby());
			
			return pst.executeUpdate(); 
			// executeUpdate() : DB가 변경되고 끝나는 애들한테 사용 insert, update, delete
			// executeQuery : select에서 사용
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public List<ProductVO> selectList() {
		System.out.println("DAO 접근완료");
		query = "select * from product order by pno desc";
		List<ProductVO> list = new ArrayList<ProductVO>();
		
		try {
			pst = conn.prepareStatement(query);
			ResultSet rs = pst.executeQuery();
			
			// 다음 next 값이 있다면
			while(rs.next()) {
				list.add(new ProductVO(rs.getInt("pno"),
						rs.getString("pname"),
						rs.getString("regdate"))); // rs.getString안에 있는 이름은 데이터 필드명.
			}
			// 전부 add 됐으면 return
			return list;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public ProductVO selectOne(int pno) {
		System.out.println("DAO 접근 완료");
		query = "select * from product where pno = ?";
		try {
			pst = conn.prepareStatement(query);
			pst.setInt(1, pno);
			ResultSet rs = pst.executeQuery();
			if(rs.next()) {
				return new ProductVO(rs.getInt("pno"),
						rs.getString("pname"),
						rs.getInt("price"),
						rs.getString("regdate"),
						rs.getString("madeby"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public ProductVO edit(int pno, String pname, int price, String madeby) {
		System.out.println("DAO 접근 완료");
		query = "update product set pname = ?, price = ?, madeby =? where pno = ?";
		try {
			pst = conn.prepareStatement(query);
			pst.setInt(1, pno);
			ResultSet rs = pst.executeQuery();
			if(rs.next()) {
				return new ProductVO(rs.getInt("pno"),
						rs.getString("regdate"));
			}
			pst = conn.prepareStatement(query);
			pst.setString(1, pname);
			pst.setInt(2, price);
			pst.setString(3, madeby);
			pst.setInt(4, pno);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return null;
	}


}
